<?php

/**
 * Include the Audiolock API request wrapper class.
 */
function audiolock_include() {
  // This will return false if file can't be included for any reason.
  return module_load_include('inc', 'audiolock', 'audiolock');
}

/**
 * Helper function to make Audiolock API reqests.
 */
function audiolock_request($method = '', array $params = array()) {
  audiolock_include();
  $client = new DrupalAudiolock();

  return $client->request($method, $params);
}

/**
 * Implementation of hook_field_info().
 */
function audiolock_field_info() {
  return array(
    'audiolock' => array(
      'label' => t('Audiolock'),
      'description' => t('Audiolock upload field.'),
    ),
  );
}

/**
 * Implementation of hook_field_settings().
 */
function audiolock_field_settings($op, $field) {
  switch ($op) {
    case 'form':
      $form = array();
      $form['audiolock_example'] = array(
        '#type' => 'textfield',
        '#label' => 'This is a test field',
        '#description' => 'THSJSDk jkjskjd df djhfdjhf',
      );
      return $form;
    case 'database columns':
      $columns['track_uid'] = array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      );
      $columns['track_name'] = array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'sortable' => TRUE,
        'views' => TRUE,
      );
      return $columns;
    case 'save':
      return array('track_uid', 'track_name');
  }
}

/**
 * Implementation of hook_field().
 */
function audiolock_field($op, &$node, $field, &$items, $teaser, $page) {
  switch ($op) {
    case 'validate':
    break;
    case 'sanitize':
    break;
    case 'presave':
      dpm($items);
      if($file = file_save_upload('field_audiolock_test')) {
        // Send file to Audiolock.
        // populate the following array:
        // array('audolock_name' => FILENAME, 'audiolock_uid' => FILELOCK USER UID);
      }
    break;
  }
}

/**
* Implementation of hook_widget_info().
*/
function audiolock_widget_info() {
  return array(
    'audiolock_widget' => array(
      'label' => t('Default upload'),
      'field types' => array('audiolock'),
      'multiple values' => CONTENT_HANDLE_CORE,
      'callbacks' => array(
        'default value' => CONTENT_CALLBACK_DEFAULT,
      ),
    ),
  );
}

/**
 * Implementation of hook_widget().
 */
function audiolock_widget(&$form, &$form_state, $field, $items, $delta = 0) {
  $form['#attributes']['enctype'] = 'multipart/form-data';

  $element['audiolock_file'] = array(
    '#type' => 'file',
    '#attributes' => array(
      'class' => 'audiolock-widget',
    ),
    '#description' => t('Choose a file to upload to Audiolock.'),
  );

  return $element;
}

/**
 * Implementation of hook_field_formatter_info().
 */
function audiolock_field_formatter_info() {
  return array(
    'audiolock_stream_link' => array(
      'label' => t('Audiolock stream link'),
      'field types' => array('audiolock'),
      'multiple values' => CONTENT_HANDLE_CORE,
    ),
  );
}

/**
 * Implementation of hook_content_is_empty().
 *
 */
function audiolock_content_is_empty($item, $field) {
  if (empty($item['audiolock_file'])) {
    return TRUE;
  }
  return FALSE;
}
